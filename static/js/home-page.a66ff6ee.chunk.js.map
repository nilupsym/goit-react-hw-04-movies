{"version":3,"sources":["services/Api.jsx","components/MoviesList/MoviesList.jsx","views/HomePage.jsx"],"names":["API_KEY","BASE_URL","fetchPopular","axios","get","then","response","data","results","fetchMovieByQuery","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","withRouter","movies","location","map","id","title","name","to","pathname","routes","state","from","HomePage","error","a","Api","setState","catch","this","length","props","Component"],"mappings":"yIAAA,qBAEMA,EAAU,mCACVC,EAAW,+BAgCF,KAAEC,aA9BI,WACjB,OAAOC,IACFC,IADE,UACKH,EADL,qCAC0CD,IAC5CK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YA2BTC,kBAxBL,SAACC,GACvB,OAAOP,IACFC,IADE,UACKH,EADL,iCACsCD,EADtC,kBACuDU,IACzDL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAqBUG,kBAlBxB,SAACC,GACvB,OAAOT,IACFC,IADE,UACKH,EADL,kBACuBW,EADvB,oBAC0CZ,EAD1C,oBAEFK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAekCM,eAZ9C,SAACD,GACpB,OAAOT,IACFC,IADE,UACKH,EADL,kBACuBW,EADvB,4BACkDZ,EADlD,oBAEFK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SASkDO,kBAN3D,SAACF,GACvB,OAAOT,IACFC,IADE,UACKH,EADL,kBACuBW,EADvB,4BACkDZ,EADlD,2BAEFK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,gCChCnC,gCAsBeQ,iBAlBI,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACzB,OACI,6BACKD,EAAOE,KACJ,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,KAAb,OACI,6BACI,eAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,GAAD,OAAKC,IAAOR,OAAZ,YAAsBG,EAAtB,KACRM,MAAO,CAAEC,KAAMT,IAFnB,UAGKI,EAAQD,MAJRD,Y,kICLvBQ,E,4MACFF,MAAQ,CACJT,OAAQ,GACRY,MAAO,M,8FAGX,iCAAAC,EAAA,sEACUC,IACD5B,eACAG,MAAK,SAAAG,GAAO,OAAI,EAAKuB,SAAS,CAAEf,OAAQR,OACxCwB,OAAM,SAAAJ,GAAK,OAAI,EAAKG,SAAS,CAAEH,aAJxC,2C,0EAOA,WAAS,IAEGZ,EAAWiB,KAAKR,MAAhBT,OAER,OACI,mCACKA,EAAOkB,OAAS,GAAK,cAAC,IAAD,CAAYlB,OAAQA,EAAQC,SAAUgB,KAAKE,MAAMlB,iB,GAnBhEmB,aAyBRT","file":"static/js/home-page.a66ff6ee.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '6ac85d37fc5933a9e58505b5650ac08b';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst fetchPopular = () => {\r\n    return axios\r\n        .get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`)\r\n        .then(response => response.data.results);\r\n};\r\n\r\nconst fetchMovieByQuery = (query) => {\r\n    return axios\r\n        .get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`)\r\n        .then(response => response.data.results);\r\n};\r\n\r\nconst fetchMovieDetails = (movieId) => {\r\n    return axios\r\n        .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\r\n        .then(response => response.data);\r\n};\r\n\r\nconst fetchMovieCast = (movieId) => {\r\n    return axios\r\n        .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\r\n        .then(response => response.data);\r\n};\r\n\r\nconst fetchMovieReviews = (movieId) => {\r\n    return axios\r\n        .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\r\n        .then(response => response.data);\r\n};\r\n// eslint-disable-next-line\r\nexport default { fetchPopular, fetchMovieByQuery, fetchMovieDetails, fetchMovieCast, fetchMovieReviews};","import { Link, withRouter } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n\r\n\r\nconst MoviesList = ({movies, location}) => {\r\n    return (\r\n        <ul>\r\n            {movies.map(\r\n                ({id, title, name}) => (\r\n                    <li key={id}>\r\n                        <Link to={{\r\n                            pathname: `${routes.movies}/${id}}`,\r\n                            state: { from: location }\r\n                        }}>{ name }{ title }</Link>\r\n                    </li>\r\n                )\r\n            )}\r\n        </ul>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(MoviesList);","import React, { Component } from 'react';\r\nimport MoviesList from '../components/MoviesList/MoviesList';\r\nimport Api from '../services/Api';\r\n\r\nclass HomePage extends Component {\r\n    state = {\r\n        movies: [],\r\n        error: null,\r\n    };\r\n    \r\n    async componentDidMount() {\r\n        await Api\r\n            .fetchPopular()\r\n            .then(results => this.setState({ movies: results }))\r\n            .catch(error => this.setState({ error }));\r\n    }\r\n\r\n    render() {\r\n        // console.log('matchURL:', this.props.match.url);\r\n        const { movies } = this.state;\r\n    \r\n        return (\r\n            <>\r\n                {movies.length > 0 && <MoviesList movies={movies} location={this.props.location} />}\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\nexport default HomePage;"],"sourceRoot":""}